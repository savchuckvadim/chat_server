version: '2.0'
services:

    #PHP Service
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: cloudsigma.com/php
        container_name: app
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        working_dir: /var/www/html/
        volumes:
        # - папка в контейнере
            - ./:/var/www/html/
            - ./php/laravel.ini:/usr/local/etc/php/conf.d/laravel.ini
        networks:
            - app-network

    #Nginx Service
    webserver:
        image: nginx:alpine
        container_name: webserver
        restart: unless-stopped
        tty: true
        ports:
            - "80:80"
            - "443:443"

        volumes:
            - ./:/var/www/html/
            - ./nginx/conf.d/:/etc/nginx/conf.d/
            # - ./nginx/prod:/etc/nginx/conf.d/
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www/html:/var/www/html/certbot
        networks:
            - app-network

    #Websockets Service
    websockets:
        image: cloudsigma.com/php
        command: [ 'php', 'artisan', 'websockets:serve' ]
        container_name: websockets
        restart: unless-stopped
        working_dir: /var/www/html/
        volumes:
            - ./:/var/www/html/
        # ports:
        #     - ${LARAVEL_WEBSOCKETS_PORT}:6001
        networks:
            - app-network

    #MySQL Service
    db:
        image: mysql:5.7.32
        container_name: db
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: chat
            MYSQL_ROOT_PASSWORD: chat
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - dbdata:/var/lib/mysql/
            - ./mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - app-network

    #MCertbot Service
    certbot:
        image: certbot/certbot
        container_name: certbot
        volumes:
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www/html:/var/www/html/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
        networks:
            - app-network

#Docker Networks
networks:
    app-network:
        driver: bridge
#Volumes
volumes:
    dbdata:
        driver: local
